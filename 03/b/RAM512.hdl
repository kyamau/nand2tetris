// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // 512 = 2^9 = 2^3 * 2^6, so we need 2^3 RAM64s.
    DMux8Way(in=load, sel=address[6..8], a=lb1, b=lb2, c=lb3, d=lb4, e=lb5, f=lb6, g=lb7, h=lb8);
    RAM64(in=in, out=out1, load=lb1, address=address[0..5]);
    RAM64(in=in, out=out2, load=lb2, address=address[0..5]);
    RAM64(in=in, out=out3, load=lb3, address=address[0..5]);
    RAM64(in=in, out=out4, load=lb4, address=address[0..5]);
    RAM64(in=in, out=out5, load=lb5, address=address[0..5]);
    RAM64(in=in, out=out6, load=lb6, address=address[0..5]);
    RAM64(in=in, out=out7, load=lb7, address=address[0..5]);
    RAM64(in=in, out=out8, load=lb8, address=address[0..5]);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, out=out, sel=address[6..8]);
}
