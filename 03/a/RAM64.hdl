// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=lb1, b=lb2, c=lb3, d=lb4, e=lb5, f=lb6, g=lb7, h=lb8);
    RAM8(in=in, out=out1, load=lb1, address=address[0..2]);
    RAM8(in=in, out=out2, load=lb2, address=address[0..2]);
    RAM8(in=in, out=out3, load=lb3, address=address[0..2]);
    RAM8(in=in, out=out4, load=lb4, address=address[0..2]);
    RAM8(in=in, out=out5, load=lb5, address=address[0..2]);
    RAM8(in=in, out=out6, load=lb6, address=address[0..2]);
    RAM8(in=in, out=out7, load=lb7, address=address[0..2]);
    RAM8(in=in, out=out8, load=lb8, address=address[0..2]);
    Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, out=out, sel=address[3..5]);
}
